#!/usr/bin/env sh
# Environment set when logging into a shell.
# Written by ayekat on a frustrating evening in september 2014.

# ------------------------------------------------------------------------------
# OPERATING SYSTEM {{{

OS_RELEASE=''
if [ -e /etc/lsb-release ]; then
	OS_RELEASE="$(grep -e '^DISTRIB_ID=' /etc/lsb-release | cut -d '=' -f 2 | \
	              tr 'A-Z' 'a-z')"
elif [ -e /etc/os-release ]; then
	OS_RELEASE="$(grep -e '^ID=' /etc/os-release | cut -d '=' -f 2)"
elif [ "$(uname)" = 'Darwin' ]; then
	OS_RELEASE='darwin'
elif [ -e /etc/gentoo-release ]; then
	OS_RELEASE='gentoo'
else
	OS_RELEASE="$(uname)"
fi
export OS_RELEASE

# }}}
# ------------------------------------------------------------------------------
# PATH {{{

# Check if directory is already in PATH:
path_lacks() {
	case "$OS_RELEASE" in
		darwin) READLINK=greadlink ;;
		*) READLINK=readlink ;;
	esac
	for i in $PATH; do
		[ "$1" != "$i" ] || return 1
		[ ! -h "$1" ] || [ "$($READLINK -f "$1")" != "$i" ] || return 1
	done
}

# Add directory to PATH (if existing and not duplicate):
add_to_path() {
	[ -d "$1" ] || return
	[ -z "$PATH" ] && PATH="$1" && return
	IFS_OLD="$IFS"
	IFS=:
	if path_lacks "$1"; then
		if [ "$2" = '--append' ]; then
			PATH="$PATH:$1"
		else
			PATH="$1:$PATH"
		fi
	fi
	IFS="$IFS_OLD"
	unset IFS_OLD
}

# Basic paths (no /usr merge because of Debian; this diverges from the
# "traditional" order):
add_to_path '/sbin'
add_to_path '/usr/sbin'
add_to_path '/usr/local/sbin'

# User specific path:
add_to_path "$HOME/.local/bin"

# EPFL scripts:
add_to_path "$HOME/.local/opt/epflscripts/bin"

# Altera (Quartus, ModelSim):
# - user is recommended to be in 'plugdev' group, for USB devices
# - quartus starts Quartus, vsim starts ModelSim
dir_altera="$HOME/.local/opt/altera"
if [ -d "$dir_altera" ]; then
	for p in "$dir_altera/nios2eds/bin/gnu/H-$(uname -m)-pc-linux-gnu/bin" \
	         "$dir_altera/nios2eds/sdk2/bin" \
	         "$dir_altera/nios2eds/bin" \
	         "$dir_altera/quartus/bin" \
	         "$dir_altera/quartus/sopc_builder/bin" \
	         "$dir_altera/modelsim_ase/bin"
	do
		add_to_path "$p" --append
	done
	export QUARTUS_ROOTDIR="$dir_altera/quartus"
	export SOPC_KIT_NIOS2=/home/ayekat/.local/opt/altera/nios2eds
	if [ `uname -m` = 'x86_64' ]; then
		export QUARTUS_64BIT=1
	else
		export QUARTUS_64Bit=0
	fi
fi
unset dir_altera

unset -f path_lacks
unset -f add_to_path
export PATH

# }}}
# ------------------------------------------------------------------------------
# XDG {{{

# Set XDG base directory specification variables:
export XDG_CONFIG_HOME=~/.local/etc
export XDG_CACHE_HOME=~/.local/var/cache
export XDG_DATA_HOME=~/.local/var/lib
export XDG_RUNTIME_DIR=~/.local/run
export XDG_LOG_HOME=~/.local/var/log  # not XDG basedir standard!

# Fix various applications to respect XDG:
export VIMINIT="source $XDG_CONFIG_HOME/vim/vimrc"        # vim
export XINITRC="$XDG_CONFIG_HOME/X11/xinitrc"             # xinit (!startx)
export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"           # startx
export GNUPGHOME="$XDG_DATA_HOME/gnupg"                 # gpg
export PGPPATH="$XDG_DATA_HOME/gnupg"                   # mutt (pgp)
export TASKDATA="$XDG_DATA_HOME/task"                     # task-warrior
export TASKRC="$XDG_CONFIG_HOME/task/taskrc"              # task-warrior
export RXVT_SOCKET="$HOME/.urxvtd.sock"                   # urxvtd
export LESSHISTFILE="$XDG_LOG_HOME/lesshist"              # less
export PASSWORD_STORE_DIR="$XDG_DATA_HOME/pass"           # pass
export GIMP2_DIRECTORY="$XDG_DATA_HOME/gimp"            # gimp
export MPLAYER_HOME="$XDG_CONFIG_HOME/mplayer"            # mplayer
export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc-2.0" # GTK+

# }}}
# ------------------------------------------------------------------------------
# DEFAULT APPLICATIONS {{{

# Editor and pager:
export EDITOR='/usr/bin/vim'
export VISUAL='/usr/bin/vim'
export PAGER='/usr/bin/less'

# }}}
# ------------------------------------------------------------------------------
# LOOK {{{

# Set output style for `ls` in coreutils>=8.25:
export QUOTING_STYLE=literal

# Set colours for less, man:
if [ "$TERM" = 'linux' ]; then
	export LESS_TERMCAP_mb=$(printf "\033[34m")
	export LESS_TERMCAP_md=$(printf "\033[31m")
	export LESS_TERMCAP_me=$(printf "\033[0m")
	export LESS_TERMCAP_se=$(printf "\033[0m")
	export LESS_TERMCAP_so=$(printf "\033[30;43m")
	export LESS_TERMCAP_ue=$(printf "\033[0m")
	export LESS_TERMCAP_us=$(printf "\033[32m")
else
	export LESS_TERMCAP_mb=$(printf "\033[1;34m")
	export LESS_TERMCAP_md=$(printf "\033[38;5;9m")
	export LESS_TERMCAP_me=$(printf "\033[0m")
	export LESS_TERMCAP_se=$(printf "\033[0m")
	export LESS_TERMCAP_so=$(printf "\033[30;43m")
	export LESS_TERMCAP_ue=$(printf "\033[0m")
	export LESS_TERMCAP_us=$(printf "\033[38;5;10m")
fi

# Set colours for ls (TODO):
#export LS_COLORS=''

# Set colours for gcc:
export GCC_COLORS='error=01;31:warning=33:note=36:caret=01;32:locus=37:quote=32'

# }}}
# ------------------------------------------------------------------------------
# RAINBOWDASH FUCK-AROUND {{{
# GNU Generation server admin thinks it's funny to have a french locale.

if [ "$(hostname)" = 'rainbowdash' ] && locale -a |grep 'en_GB\.utf8' >/dev/null
then
	export LANG=en_GB.utf8
fi

# }}}
