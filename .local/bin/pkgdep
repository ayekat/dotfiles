#!/usr/bin/env bash

# This script provides functionality to list and install build dependencies for
# Arch Linux packages.
# Written by ayekat on a bored saturday evening in January 2015.

# Location of ABS config:
ABSCONFIG=/etc/abs.conf

# Print error message and exit:
md_die() {
	echo "$md: $@" >&2
	exit 1
}

# Print help message and exit:
md_usage() {
	echo "$md: list and install build dependencies for Arch Linux packages" >&2
	echo                                                                    >&2
	echo "Usage: $md {install,list,listall} PACKAGE"                        >&2
	exit 1
}

# Determine location of ABS root:
md_sourceabs() {
	if [ ! -e "$ABSCONFIG" ]; then
		echo "warning: ABS configuration '$ABSCONFIG' does not exist" >&2
		echo "         defaulting ABSROOT to $md_absroot"             >&2
		return
	fi
	. "$ABSCONFIG"
	if [ "$ABSROOT" = '' ]; then
		echo "warning: ABSROOT not set"                   >&2
		echo "         defaulting ABSROOT to $md_absroot" >&2
		return
	fi
	md_absroot="$ABSROOT"
}

# Determine dependency list as defined in the PKGBUILD:
md_sourcepkg() {
	if [ ! -d "$md_absroot"/*/"$md_pkgname" ]; then
		md_die "package '$md_pkgname' not found in the ABS"
	fi

	md_absdir="$(echo "$md_absroot"/*/"$md_pkgname")"
	. "$md_absdir"/PKGBUILD
	md_makedeps="${makedepends[*]}"
}

# Strip packages that are already installed from dependency list:
md_strip() {
	md_makedeps_stripped=''
	for p in $md_makedeps; do
		pbare=$(echo "$p" | cut -d '=' -f 1)
		if pacman -Qq $pbare 1>/dev/null 2>/dev/null; then
			continue
		fi
		md_makedeps_stripped="$md_makedeps_stripped $p"
	done
	md_makedeps="$md_makedeps_stripped"
}

# List dependencies, line by line:
md_list() {
	for p in $md_makedeps; do
		echo $p
	done
}

# Install dependencies:
md_install() {
	if [ -z "$md_makedeps" ]; then
		md_die "no remaining build dependencies for $md_pkgname"
	fi
	pacman -S --asdeps $md_makedeps
}

# Variables:
md="$(basename $0)"
md_makedeps=''
md_absroot=/var/abs
md_command="$1"
md_pkgname="$2"

# Check correctness of command line:
if [ -z "$md_command" ] || [ -z "$md_pkgname" ]; then
	md_usage
fi

# Execute command:
case "$md_command" in
	install) md_sourceabs; md_sourcepkg; md_strip; md_install ;;
	list)    md_sourceabs; md_sourcepkg; md_strip; md_list    ;;
	listall) md_sourceabs; md_sourcepkg;           md_list    ;;
	*) md_usage ;;
esac
