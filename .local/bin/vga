#!/bin/sh
# Script for simplifying on-the-go addition of a VGA-monitor to my laptop.
# Written by ayekat on a boring january day; improved in october 2013.

vganame='VGA-0'
appname="$(basename "$0")"
export NUMSCREENS=$(xrandr | grep ' connected ' | wc -l) # TODO legacy

vga_add() {
	# mode:
	modeline="$(xrandr | grep -A 1 "$vganame connected" | tail -n +2)"
	if [ -z "$modeline" ]; then
		printf "[%s] %s is not connected\n" "$appname" "$vganame"
		exit 1
	fi
	mode="$(echo "$modeline" | cut -c 4- | cut -d ' ' -f 1)"

	# position:
	position="$1"
	if [ "$position" = 'right' ] || [ "$position" = 'left' ]; then
		position="${position}-of"
	fi
	printf "[%s] %s: adding %s with mode %s...\n" \
			"$(date +%H:%M:%S)" "$appname" "$vganame" "$mode"
	xrandr --output "$vganame" --mode "$mode" --${position} LVDS || exit 1

	# variables:
	dynenv NUM_SCREENS=2
	dzenstat restart
}

vga_remove() {
	printf "[%s] %s: removing %s...\n" "$(date +%H:%M:%S)" "$appname" "$vganame"
	xrandr --output "$vganame" --off
	xrandr --output LVDS --dpi 96
	dynenv NUM_SCREENS=1
	dzenstat restart
}

vga_help() {
	printf "%s add (right|left|above|below)|remove\n" "$appname"
}

command="$1"
shift

case "$command" in
	add)
		[ $# -ne 1 ] && { vga_help; exit 1; }
		vga_add "$@";;

	remove)
		vga_remove;;

	*)
		vga_help
esac

