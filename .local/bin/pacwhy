#!/usr/bin/env sh
set -e

# Uses expac to print the reason why a given Arch Linux package was installed on
# the system (similar to `aptitude why`).
# Written by ayekat on a cool monday morning in August 2015.

# ==============================================================================

main()
{
	get_options "$@"
	shift $ARGSHIFT
	get_packages "$@"
	shift $ARGSHIFT

	for p in $PACKAGES; do
		why "$p" 0 $MAXDEPTH
	done
}

why()
(
	package="$1"
	indent=$2
	maxdepth=$3
	reason="$(expac -Q '%w' "$package")"

	# Escape sequences for printing package name:
	esc_reset="$ESC_RESET"
	if [ "$reason" = 'explicit' ]; then
		esc_colour="$ESC_EXPLICIT"
		if [ $BRIEF = $FALSE ]; then
			groups="$(expac -Q '%G' "$package")"
			if [ -n "$groups" ]; then
				for group in $groups; do
					esc_reset="$esc_reset:${ESC_GROUP}${group}${ESC_RESET}"
				done
			fi
		fi
	else
		esc_colour="$ESC_DEPENDENCY"
	fi
	if [ $indent -eq 0 ]; then
		esc_indent=''
	else
		esc_indent="$(printf '%*s' $indent ' ')"
	fi

	# Print package name:
	printf "${esc_indent}${esc_colour}%s${esc_reset}\n" "$package"

	# Recursively print reverse dependencies:
	if [ "$reason" = 'dependency' ] || [ $VERBOSE = $TRUE ]; then
		revdeps="$(expac -Q '%N' "$package")"
		if [ $maxdepth -gt 0 ]; then
			if [ -z "$revdeps" ]; then
				if [ "$reason" = 'dependency' ]; then
					printf "${esc_indent}%*s$ESC_WARN<orphan>$ESC_RESET\n" $INDENT
				fi
			else
				for revdep in $revdeps; do
					why "$revdep" $(($indent + $INDENT)) $(($maxdepth - 1))
				done
			fi
		else
			printf "${esc_indent}%*s$ESC_MAXDEPTH<maxdepth>$ESC_RESET\n" $INDENT ' '
		fi
	fi
)

get_options()
{
	BRIEF=$FALSE
	COLOUR=auto
	INDENT=4
	MAXDEPTH=5
	VERBOSE=$FALSE

	while getopts :bc:hi:m:v opt; do
		case "$opt" in
			b) BRIEF=$TRUE ;;
			c) COLOUR="$OPTARG" ;;
			h) help; exit 1 ;;
			i) INDENT="$OPTARG" ;;
			m) MAXDEPTH=$OPTARG ;;
			v) VERBOSE=$TRUE ;;
			'?') die_usage 'Unknown option: -%s' "$OPTARG"
		esac
	done

	case "$MAXDEPTH" in (''|*[!0-9]*) false ;; esac \
	|| die_usage 'Non-decimal, non-numeric depth value: %s' "$MAXDEPTH"

	case "$INDENT" in (''|*[!0-9]*) false ;; esac \
	|| die_usage 'Non-decimal, non-numeric indent value: %s' "$MAXDEPTH"

	! case "$COLOUR" in (always|never|auto) false ;; esac \
	|| die_usage 'Invalid colour argument: %s' "$COLOUR"

	if [ "$COLOUR" = 'auto' ]; then
		if [ -t 1 ] && [ -t 2 ]; then
			COLOUR='always'
		else
			COLOUR='never'
		fi
	fi
	if [ "$COLOUR" = 'always' ]; then
		ESC_GROUP="\033[${PACWHY_GROUP:-34}m"
		ESC_DEPENDENCY="\033[${PACWHY_DEPENDENCY:-0}m"
		ESC_EXPLICIT="\033[${PACWHY_EXPLICIT:-32}m"
		ESC_WARN="\033[${PACWHY_WARN:-31}m"
		ESC_MAXDEPTH="\033[${PACWHY_MAXDEPTH:-33}m"
		ESC_RESET="\033[0m"
	else
		ESC_GROUP=''
		ESC_DEPENDENCY=''
		ESC_EXPLICIT=''
		ESC_WARN=''
		ESC_MAXDEPTH=''
		ESC_RESET=''
	fi

	ARGSHIFT=$(($OPTIND - 1))
}

get_packages()
{
	test $# -gt 0 || die_usage 'Missing package'
	PACKAGES="$@"
	ARGSHIFT=$#
}

# HELPERS ======================================================================

# Don't mix these up!
TRUE=1
FALSE=0
FAILURE=1
SUCCESS=0

INVOKENAME="$(basename "$0")"

usage() { echo "Usage: $INVOKENAME [OPTIONS ...] PACKAGE [PACKAGES ...]"; }
help()
{
	usage
	cat <<- EOF

	Display graphically why a package was installed by pacman.

	Options:
	  -c WHEN    When to show colours {auto,always,never} [default=$COLOUR]
	  -b         Brief (don't show group names)
	  -h         Display this help and exit
	  -i INDENT  Number of spaces used for indentation [default=$INDENT]
	  -m DEPTH   Maximum depth for recursion [default=$MAXDEPTH]
	  -v         Verbose (show revdeps also for explicitely installed packages)
	EOF
}

die_usage()
{
	die_usage_format="$1"
	shift
	printf "$die_usage_format\n" "$@" >&2
	usage >&2
	echo 'Run with `-h` for more information'
	exit 2
}

main "$@"
